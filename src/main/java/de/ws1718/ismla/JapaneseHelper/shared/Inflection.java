package de.ws1718.ismla.JapaneseHelper.shared;

import java.io.Serializable;

public enum Inflection implements Serializable {

	// stem forms
	IMPERFECTIVE, CONTINUATIVE, TERMINAL, ATTRIBUTIVE, HYPOTHETICAL, IMPERATIVE,
	// key constructions (verb + adj)
	FORMAL, VOLITIONAL, CONJUNCTIVE,
	// key constructions (verb)
	PASSIVE, CAUSATIVE, POTENTIAL, NEGATIVE, NEGATIVE_CONTINUATIVE, PERFECTIVE, HYPOTHETICAL_CONDITIONAL,
	FORMAL_PERFECTIVE, FORMAL_NEGATIVE_PERFECTIVE, FORMAL_VOLITIONAL, FORMAL_CONJUNCTIVE,
	// key constructions (adjective)
	INFORMAL_NEGATIVE, INFORMAL_PAST, INFORMAL_NEGATIVE_PAST, FORMAL_NEGATIVE, FORMAL_PAST, FORMAL_NEGATIVE_PAST, 
	CONDITIONAL, PROVISIONAL, ADVERBIAL, DEGREE,
	// alternatives
	ATTRIBUTIVE2, CAUSATIVE2, CONJUNCTIVE2, CONTINUATIVE2, FORMAL2, FORMAL3, FORMAL_NEGATIVE2,
	FORMAL_NEGATIVE_PAST2, HYPOTHETICAL2, HYPOTHETICAL_CONDITIONAL2, HYPOTHETICAL_CONDITIONAL3, IMPERATIVE2, 
	IMPERATIVE3, IMPERFECTIVE2, IMPERFECTIVE3, INFORMAL_NEGATIVE2, INFORMAL_NEGATIVE_PAST2, NEGATIVE2, 
	NEGATIVE3, NEGATIVE_CONTINUATIVE2, PASSIVE2, POTENTIAL2, VOLITIONAL2;
	
	@Override
	public String toString(){
		return super.toString().toLowerCase().replaceAll("[\\d+]", "").replaceAll("[_]", " ");
	}
	
}